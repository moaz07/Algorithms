//---------------Problem 1---------------
ALGORITHM sumDistinct 
VAR
    tab1 : ARRAY_OF INTEGER[];
    tab1 : ARRAY_OF INTEGER[];
    i, j, k, sum : INTEGER;
    dis : BOOLEAN;
BEGIN
sum:=0
    FOR i FROM 0 TO tab1.length STEP 1  DO
        dis:= true
        FOR j FROM i+1 TO tab1.length STEP 1  DO
            IF (tab1[i]=tab1[j]) THEN
                dis := false 
            END_IF
        END_FOR
        FOR k FROM 0 TO tab2.length STEP 1  DO
            IF (tab1[i] = tab2[k]) THEN
                dis:= false
            END_IF
        END_FOR
        IF (dis=true) THEN
            sum:= sum + tab1[i]
        END_IF
    END_FOR
    FOR i FROM 0 TO tab2.length STEP 1  DO
        dis:= true
        FOR j FROM i+1 TO tab2.length STEP 1  DO
            IF (tab2[i]=tab2[j] ) THEN
                dis := false
            END_IF
        END_FOR
        FOR k FROM 0 TO tab1.length STEP 1  DO
            IF (tab2[i] = tab1[k]) THEN
                dis:= false
            END_IF
        END_FOR
        IF (dis=true) THEN
            sum:= sum + tab2[i]
        END_IF
    END_FOR
write("Sum=", sum)
END

//---------------Problem 2---------------
ALGORITHM vectors
VAR
    v1: ARRAY_OF INTEGER[];
    v2: ARRAY_OF INTEGER[];
BEGIN
    PROCEDURE dot_product(v1,v2)
    VAR
        i, ps : INTEGER;
    BEGIN
    ps=0
        FOR i FROM 0 TO v1.length STEP 1  DO
            ps= ps + v1[i]*v2[i]
        END_FOR
    END
    dot_product(v1,v2)
    IF (ps=0) THEN
        write("orthogonal vectors")
    ELSE
        write("not orthogonal")
    END_IF
END